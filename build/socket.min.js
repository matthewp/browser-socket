(function(t){function o(){if(!o.BROWSER)throw"This browser doesn't support TCP sockets."}function e(){if(!e.BROWSER)throw"This browser doesn't support UDP sockets."}var n={};n.TCPSocket=o,n.UDPSocket=e,"function"==typeof define&&define.amd?define("socket",[],function(){return n}):Object.keys(n).forEach(function(o){t[o]=n[o]}),navigator.mozTCPSocket&&(o=function(){navigator.mozTCPSocket.apply(this,arguments)},o.prototype=Object.create(navigator.mozTCPSocket.prototype),o.BROWSER="mozilla"),function(){var t=function(){};chrome&&chrome.socket&&(o.BROWSER="chrome",o.prototype.open=function(t,o){var e=arguments;this._socketId||chrome.socket.create("tcp",{onEvent:this._onDataReceived.bind(this)},function(t){this._socketId=t.socketId,this.open.apply(this,e)}.bind(this)),chrome.socket.connect(this._socketId,t,o,function(){this.onopen()}.bind(this))},o.protoype.send=function(t){var o=this._asArrayBuffer(t);chrome.socket.write(this._socketId,o,function(){this.ondrain()}.bind(this))},o.prototype.suspend=function(){},o.prototype.resume=function(){},o.prototype.close=function(){chrome.socket.destroy(this._socketId)},o.prototype.onopen=t,o.prototype.ondrain=t,o.prototype.ondata=t,o.prototype.onerror=t,o.prototype.onclose=t,o.prototype._onDataReceived=function(t){var o=chrome.socket.read(t.socketId);this.ondata(o)},o.prototype._asArrayBuffer=function(t){if(t instanceof ArrayBuffer)return t;for(var o=""+t,e=new ArrayBuffer(2*o.length),n=new Uint16Array(e),r=0,c=o.length;c>r;r++)n[r]=o.charCodeAt(r);return e})}()})(this);